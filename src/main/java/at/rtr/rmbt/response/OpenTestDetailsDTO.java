package at.rtr.rmbt.response;

import at.rtr.rmbt.response.opentest.OpenTestDTO;
import com.fasterxml.jackson.annotation.JsonIgnore;
import com.fasterxml.jackson.annotation.JsonInclude;
import com.fasterxml.jackson.annotation.JsonProperty;
import io.swagger.v3.oas.annotations.media.Schema;
import lombok.Getter;
import lombok.experimental.SuperBuilder;

import java.util.List;

@SuperBuilder
@Getter
public class OpenTestDetailsDTO extends OpenTestDTO {

    @JsonIgnore
    @JsonProperty("test_uid")
    private Long testUid;

    @JsonProperty("distance")
    private Double distance;

    @JsonProperty("cat_technology")
    private String catTechnology;

    @JsonProperty("network_type")
    private String networkType;

    @JsonProperty("loc_src")
    private String locSrc;

    @JsonProperty("public_ip_as_name")
    private String publicIpAsName;

    @JsonProperty("zip_code")
    private Long zipCode;

    @JsonProperty("kg_nr")
    private Integer kgNr;

    @JsonProperty("gkz")
    private Integer gkz;

    @JsonProperty("gkz_sa")
    private Integer gkzSa;

    @JsonProperty("land_cover")
    private Integer landCover;

    @JsonProperty("locality")
    private String locality;

    @JsonProperty("community")
    private String community;

    @JsonProperty("district")
    private String district;

    @JsonProperty("province")
    private String province;

    @JsonProperty("lte_rsrq")
    private Long lteRsrq;

    @JsonProperty("server_name")
    private String serverName;

    @JsonProperty("implausible")
    private Boolean implausible;

    @JsonProperty("pinned")
    private Boolean pinned;

    @JsonProperty("test_duration")
    private Long testDuration;

    @JsonProperty("num_threads_requested")
    private Long numThreadsRequested;

    @JsonProperty("num_threads")
    private Long numThreads;

    @JsonProperty("num_threads_ul")
    private Long numThreadsUl;

    @JsonProperty("model")
    private String model;

    @JsonProperty("model_native")
    private String modelNative;

    @JsonProperty("product")
    private String product;

    @JsonProperty("client_version")
    private String clientVersion;

    @JsonProperty("network_mcc_mnc")
    private String networkMccMnc;

    @JsonProperty("network_country")
    private String networkCountry;

    @JsonProperty("roaming_type")
    private Long roamingType;

    @JsonProperty("network_name")
    private String networkName;

    @JsonProperty("sim_mcc_mnc")
    private String simMccMnc;

    @JsonProperty("sim_country")
    private String simCountry;

    @JsonProperty("connection")
    private String connection;

    @JsonProperty("asn")
    private Long asn;

    @JsonProperty("ip_anonym")
    private String ipAnonym;

    @JsonProperty("ndt_download_kbit")
    private Long ndtDownloadKbit;

    @JsonProperty("ndt_upload_kbit")
    private Long ndtUploadKbit;

    @JsonProperty("country_geoip")
    private String countryGeoip;

    @JsonProperty("country_asn")
    private String countryAsn;

    @JsonProperty("country_location")
    private String countryLocation;

    @JsonProperty("bytes_download")
    private Long bytesDownload;

    @JsonProperty("bytes_upload")
    private Long bytesUpload;

    @JsonProperty("test_if_bytes_download")
    private Long testIfBytesDownload;

    @JsonProperty("test_if_bytes_upload")
    private Long testIfBytesUpload;

    @JsonProperty("testdl_if_bytes_download")
    private Long testdlIfBytesDownload;

    @JsonProperty("testdl_if_bytes_upload")
    private Long testdlIfBytesUpload;

    @JsonProperty("testul_if_bytes_download")
    private Long testulIfBytesDownload;

    @JsonProperty("testul_if_bytes_upload")
    private Long testulIfBytesUpload;

    @JsonProperty("duration_download_ms")
    private Double durationDownloadMs;

    @JsonProperty("duration_upload_ms")
    private Double durationUploadMs;

    @JsonProperty("time_dl_ms")
    private Double timeDlMs;

    @JsonProperty("time_ul_ms")
    private Double timeUlMs;

    @JsonProperty("speed_items")
    private String speedItems;

    @JsonProperty("channel_number")
    private Long channelNumber;

    @JsonProperty("radio_band")
    private Long radioBand;

    @JsonProperty("cell_area_code")
    private Long cellAreaCode;

    @JsonProperty("cell_location_id")
    private Long cellLocationId;

    @JsonProperty("signal_classification")
    private Integer signalClassification;

    @JsonProperty("error")
    @JsonInclude(JsonInclude.Include.NON_NULL)
    private String error;

    @JsonProperty("wifi_link_speed")
    private Long wifiLinkSpeed;

    @JsonProperty("settlement_type")
    private Integer settlementType;

    @JsonProperty("link_id")
    private Long linkId;

    @JsonProperty("link_name")
    private String linkName;

    @JsonProperty("link_distance")
    private Integer linkDistance;

    @JsonProperty("edge_id")
    private Long edgeId;

    @JsonProperty("link_name1")
    private String linkName1;

    @JsonProperty("link_name2")
    private String linkName2;

    @JsonProperty("link_frc")
    private Integer linkFrc;

    @JsonProperty("dtm_level")
    private Integer dtmLevel;

    @JsonProperty("temperature")
    @Schema(description = "Temperature of the device in Celsius")
    private Double temperature;

    @JsonProperty("atraster100")
    @Schema(description = "Austrian 100m grid ID")
    private String atraster100;

    @JsonProperty("atraster250")
    @Schema(description = "Austrian 250m grid ID")
    private String atraster250;


}